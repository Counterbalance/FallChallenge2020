diff --git a/engine/core/src/main/java/com/codingame/gameengine/core/GameManager.java b/engine/core/src/main/java/com/codingame/gameengine/core/GameManager.java
index 863b7c82..c84d224f 100644
--- a/engine/core/src/main/java/com/codingame/gameengine/core/GameManager.java
+++ b/engine/core/src/main/java/com/codingame/gameengine/core/GameManager.java
@@ -579,7 +579,8 @@ abstract public class GameManager<T extends AbstractPlayer> {
     private void addTurnTime() {
         totalTurnTime += turnMaxTime;
         if (totalTurnTime > GAME_DURATION_HARD_QUOTA) {
-            throw new RuntimeException(String.format("Total game duration too long (>%dms)", GAME_DURATION_HARD_QUOTA));
+            //throw new RuntimeException(String.format("Total game duration too long (>%dms)", GAME_DURATION_HARD_QUOTA));
+            log.warn(String.format("Total game duration too long (>%dms)", GAME_DURATION_HARD_QUOTA));
         } else if (totalTurnTime > GAME_DURATION_SOFT_QUOTA) {
             log.warn(
                 String.format(
diff --git a/pom.xml b/pom.xml
index 1318a640..93ef36d7 100644
--- a/pom.xml
+++ b/pom.xml
@@ -96,6 +96,16 @@
 					</execution>
 				</executions>
 			</plugin>
+			<plugin>
+				<groupId>org.apache.maven.plugins</groupId>
+				<artifactId>maven-compiler-plugin</artifactId>
+				<configuration>
+					<source>1.8</source>
+					<target>1.8</target>
+				</configuration>
+			</plugin>
+
+			<!--
 			<plugin>
 				<groupId>org.apache.maven.plugins</groupId>
 				<artifactId>maven-gpg-plugin</artifactId>
@@ -110,6 +120,7 @@
 					</execution>
 				</executions>
 			</plugin>
+			-->
 		</plugins>
 	</build>
 </project>
diff --git a/runner/src/main/java/com/codingame/gameengine/runner/GameRunner.java b/runner/src/main/java/com/codingame/gameengine/runner/GameRunner.java
index 16b14920..e3248d48 100644
--- a/runner/src/main/java/com/codingame/gameengine/runner/GameRunner.java
+++ b/runner/src/main/java/com/codingame/gameengine/runner/GameRunner.java
@@ -329,10 +329,13 @@ abstract class GameRunner {
                 } else {
                     throw new RuntimeException("Invalid Referee command line count: " + output);
                 }
-                if (checkOutput(output, nbLinesToRead) != OutputResult.OK) {
+                OutputResult res = checkOutput(output, nbLinesToRead);
+                if (res != OutputResult.OK) {
                     throw new RuntimeException(
-                        "Error reading Referee command. Buffer capacity: " + output.length() + " / "
+                        "Error reading Referee command! Buffer capacity: " + output.length() + " / "
                             + (round == 0 ? RefereeAgent.REFEREE_MAX_BUFFER_SIZE_EXTRA : RefereeAgent.REFEREE_MAX_BUFFER_SIZE)
+                            + " - OutputResult: " + res.toString()
+                            + "; read output: " + output
                     );
                 }
                 return new Command(InputCommand.valueOf(command), output);
